name: CI

on:
  push:
    branches:
      - main
      - 'dev/**'
  pull_request:

defaults:
  run:
    shell: bash -l {0}

jobs:
  test:
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11']
        # setup-python doesn't have conda on windows
        # we only have snapshots for macos, ignoring ubuntu-latest
        os: [macos-latest]

    runs-on: ${{ matrix.os }}

    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}

      - name: Lint
        run: |

          python3 -m pip install --upgrade pip
          python3 -m pip install --upgrade pkgmt nox pyyaml
          pkgmt lint


      - name: Install dependencies
        run: |

          nox --install-only

      - name: Test
        run: |

          nox --session test --no-install --reuse-existing-virtualenvs

  create-image-artifacts-if-test-failed:
    needs: test
    if: ${{ failure() }}
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure git to use https
        run: git config --global hub.protocol https

      - name: Install Conda environment with Micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-name: jupysql-plugin
          environment-file: environment.yml

      - name: Set up environment variables
        env:
          REUSE_EXISTING_SERVER: true
        run: |
          echo "REUSE_EXISTING_SERVER=$REUSE_EXISTING_SERVER" >> $GITHUB_ENV

      - name: Install JupySQL-Plugin
        run: |
          pip install -e "."

      - name: Install Galata
        run: |
          yarn playwright install chromium
        working-directory: ui-tests

      - name: Launch JupyterLab
        run: yarn run start:detached
        working-directory: ui-tests

      - name: Wait for JupyterLab
        uses: ifaxity/wait-on-action@v1
        with:
          resource: http-get://localhost:8888/api
          timeout: 20000

      - name: Generate updated Galata References
        run: yarn run test:update
        working-directory: ui-tests

      - name: Upload test snapshots
        uses: actions/upload-artifact@v3
        with:
          name: snapshots
          path: ui-tests/tests/jupysql_plugin.test.ts-snapshots